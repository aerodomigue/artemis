name: Test Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-macos:
    name: Test macOS Build
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.3'
        host: 'mac'
        target: 'desktop'
        modules: 'qtmultimedia'
    
    - name: Install dependencies
      run: |
        brew install ffmpeg opus sdl2 sdl2_ttf
    
    - name: Clean any existing build
      run: |
        rm -f .qmake.stash .qmake.cache
        find . -name "Makefile*" -delete
        # Clean submodule build artifacts
        rm -rf moonlight-common-c/Makefile* moonlight-common-c/.qmake.stash
        rm -rf qmdnsengine/Makefile* qmdnsengine/.qmake.stash 
        rm -rf h264bitstream/Makefile* h264bitstream/.qmake.stash
        rm -rf soundio/Makefile* soundio/.qmake.stash
        rm -rf app/Makefile* app/.qmake.stash
    
    - name: Debug Qt setup
      run: |
        echo "Qt6_DIR: $Qt6_DIR"
        echo "PATH: $PATH"
        which qmake6 || echo "qmake6 not found in PATH"
        ls -la "$Qt6_DIR/bin/" || echo "Qt6_DIR/bin not found"
    
    - name: Build
      run: |
        export PATH="$Qt6_DIR/bin:$PATH"
        export QMAKE="$Qt6_DIR/bin/qmake6"
        echo "Using qmake at: $(which qmake6)"
        qmake6 moonlight-qt.pro CONFIG+=release CONFIG+=sdk_no_version_check
        make -j$(sysctl -n hw.ncpu)
    
    - name: Verify Build
      run: |
        ls -la app/Moonlight.app/Contents/MacOS/
        file app/Moonlight.app/Contents/MacOS/Moonlight

  test-linux:
    name: Test Linux Build
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.3'
        host: 'linux'
        target: 'desktop'
        modules: 'qtmultimedia qtwayland'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libegl1-mesa-dev libgl1-mesa-dev libopus-dev libsdl2-dev \
          libsdl2-ttf-dev libssl-dev libavcodec-dev libavformat-dev \
          libswscale-dev libva-dev libvdpau-dev libxkbcommon-dev \
          wayland-protocols libdrm-dev
    
    - name: Clean any existing build
      run: |
        rm -f .qmake.stash .qmake.cache
        find . -name "Makefile*" -delete
        # Clean submodule build artifacts
        rm -rf moonlight-common-c/Makefile* moonlight-common-c/.qmake.stash
        rm -rf qmdnsengine/Makefile* qmdnsengine/.qmake.stash 
        rm -rf h264bitstream/Makefile* h264bitstream/.qmake.stash
        rm -rf app/Makefile* app/.qmake.stash
    
    - name: Build
      run: |
        export PATH="$Qt6_DIR/bin:$PATH"
        export QMAKE="$Qt6_DIR/bin/qmake6"
        qmake6 moonlight-qt.pro CONFIG+=release
        make -j$(nproc)
    
    - name: Verify Build
      run: |
        ls -la app/
        file app/moonlight || echo "moonlight binary not found"
