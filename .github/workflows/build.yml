name: Build Artemis Qt

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  QT_VERSION: '6.6.3'

jobs:
  build-windows:
    name: Windows Build
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        modules: 'qtmultimedia'
    
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    
    - name: Build
      run: |
        $env:PATH += ";$env:Qt6_DIR\bin"
        qmake6 moonlight-qt.pro CONFIG+=release
        nmake
    
    - name: Package Windows Build
      run: |
        mkdir windows-package
        copy app\release\moonlight.exe windows-package\
        Compress-Archive -Path windows-package\* -DestinationPath artemis-windows.zip
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artemis-windows
        path: artemis-windows.zip

  build-macos:
    name: macOS Build
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'mac'
        target: 'desktop'
        modules: 'qtmultimedia'
    
    - name: Install dependencies
      run: |
        brew install create-dmg ffmpeg opus sdl2 sdl2_ttf
    
    - name: Clean any existing build
      run: |
        rm -f .qmake.stash .qmake.cache
        find . -name "Makefile*" -delete
        # Clean submodule build artifacts
        rm -rf moonlight-common-c/Makefile* moonlight-common-c/.qmake.stash
        rm -rf qmdnsengine/Makefile* qmdnsengine/.qmake.stash 
        rm -rf h264bitstream/Makefile* h264bitstream/.qmake.stash
        rm -rf soundio/Makefile* soundio/.qmake.stash
        rm -rf app/Makefile* app/.qmake.stash
    
    - name: Build
      run: |
        export PATH="$Qt6_DIR/bin:$PATH"
        export QMAKE="$Qt6_DIR/bin/qmake6"
        qmake6 moonlight-qt.pro CONFIG+=release CONFIG+=sdk_no_version_check
        make -j$(sysctl -n hw.ncpu)
    
    - name: Package macOS Build
      run: |
        tar -czf artemis-macos.tar.gz -C app Moonlight.app
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artemis-macos
        path: artemis-macos.tar.gz

  build-linux:
    name: Linux Build
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'linux'
        target: 'desktop'
        modules: 'qtmultimedia qtwayland'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libegl1-mesa-dev libgl1-mesa-dev libopus-dev libsdl2-dev \
          libsdl2-ttf-dev libssl-dev libavcodec-dev libavformat-dev \
          libswscale-dev libva-dev libvdpau-dev libxkbcommon-dev \
          wayland-protocols libdrm-dev nasm libgbm-dev \
          libfreetype6-dev libasound2-dev libdbus-1-dev \
          libgles2-mesa-dev libglu1-mesa-dev libibus-1.0-dev \
          libpulse-dev libudev-dev libx11-dev libxcursor-dev \
          libxext-dev libxi-dev libxinerama-dev libxrandr-dev \
          libxss-dev libxt-dev libxv-dev libxxf86vm-dev \
          libxcb-dri3-dev libx11-xcb-dev
    
    - name: Clean any existing build
      run: |
        rm -f .qmake.stash .qmake.cache
        find . -name "Makefile*" -delete
        # Clean submodule build artifacts
        rm -rf moonlight-common-c/Makefile* moonlight-common-c/.qmake.stash
        rm -rf qmdnsengine/Makefile* qmdnsengine/.qmake.stash 
        rm -rf h264bitstream/Makefile* h264bitstream/.qmake.stash
        rm -rf app/Makefile* app/.qmake.stash
    
    - name: Build
      run: |
        export PATH="$Qt6_DIR/bin:$PATH"
        export QMAKE="$Qt6_DIR/bin/qmake6"
        qmake6 moonlight-qt.pro CONFIG+=release
        make -j$(nproc)
    
    - name: Package Linux Build
      run: |
        tar -czf artemis-linux.tar.gz -C app moonlight
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artemis-linux
        path: artemis-linux.tar.gz

  build-steamdeck:
    name: Steam Deck Build
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: 'linux'
        target: 'desktop'
        modules: 'qtmultimedia qtwayland'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libegl1-mesa-dev libgl1-mesa-dev libopus-dev libsdl2-dev \
          libsdl2-ttf-dev libssl-dev libavcodec-dev libavformat-dev \
          libswscale-dev libva-dev libvdpau-dev libxkbcommon-dev \
          wayland-protocols libdrm-dev nasm libgbm-dev \
          libfreetype6-dev libasound2-dev libdbus-1-dev \
          libgles2-mesa-dev libglu1-mesa-dev libibus-1.0-dev \
          libpulse-dev libudev-dev libx11-dev libxcursor-dev \
          libxext-dev libxi-dev libxinerama-dev libxrandr-dev \
          libxss-dev libxt-dev libxv-dev libxxf86vm-dev \
          libxcb-dri3-dev libx11-xcb-dev
    
    - name: Clean any existing build
      run: |
        rm -f .qmake.stash .qmake.cache
        find . -name "Makefile*" -delete
        # Clean submodule build artifacts
        rm -rf moonlight-common-c/Makefile* moonlight-common-c/.qmake.stash
        rm -rf qmdnsengine/Makefile* qmdnsengine/.qmake.stash 
        rm -rf h264bitstream/Makefile* h264bitstream/.qmake.stash
        rm -rf app/Makefile* app/.qmake.stash
    
    - name: Build for Steam Deck
      run: |
        export PATH="$Qt6_DIR/bin:$PATH"
        export QMAKE="$Qt6_DIR/bin/qmake6"
        # Configure for Steam Deck specific optimizations
        qmake6 moonlight-qt.pro CONFIG+=release CONFIG+=embedded CONFIG+=gpuslow
        make -j$(nproc)
    
    - name: Create Steam Deck Package
      run: |
        mkdir -p steamdeck-package
        cp app/moonlight steamdeck-package/artemis
        # Create desktop file for Steam Deck
        cat > steamdeck-package/artemis.desktop << EOF
        [Desktop Entry]
        Name=Artemis
        Comment=Game streaming client for Apollo/Sunshine
        Exec=artemis
        Icon=artemis
        Terminal=false
        Type=Application
        Categories=Game;
        EOF
        tar -czf artemis-steamdeck.tar.gz -C steamdeck-package .
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artemis-steamdeck
        path: artemis-steamdeck.tar.gz


  release:
    name: Create Release
    if: github.event_name == 'release'
    needs: [build-windows, build-macos, build-linux, build-steamdeck]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/artemis-windows/*
          artifacts/artemis-macos/*
          artifacts/artemis-linux/*
          artifacts/artemis-steamdeck/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
